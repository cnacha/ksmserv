package com.mfu.web.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.mfu.dao.common.UserDAO;
import com.mfu.entity.common.User;


@Controller
public class UserController {

	@RequestMapping(value = "/admin/listUserWS", method = RequestMethod.GET)
	@ResponseBody
	public List<User> listUserWS(HttpServletRequest request) {

		UserDAO userService = new UserDAO();
		List<User> users = userService.getAllUser();
		userService.closeEntityManager();
		return users;
	}

	@RequestMapping(value = "/admin/saveUserWS", method = RequestMethod.POST)
	@ResponseBody
	public String saveUserWS(@RequestBody User user, HttpServletRequest request) {

		try {
			UserDAO userService = new UserDAO();
			userService.saveUser(user);
			userService.closeEntityManager();
		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}

		return "1";
	}



	@RequestMapping(value = "/admin/activateUserWS", method = RequestMethod.GET)
	@ResponseBody
	public String activateUserWS(HttpServletRequest request) {
	
		UserDAO userDAO = new UserDAO();
		try {
			User user = userDAO.findUserByKey(request.getParameter("userKey"));
			user.setStatus(1);
			userDAO.saveUser(user);

		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}
		userDAO.closeEntityManager();

		return "1";
	}

	@RequestMapping(value = "/admin/deactivateUserWS", method = RequestMethod.GET)
	@ResponseBody
	public String deactivateUserWS(HttpServletRequest request) {
		
		UserDAO userDAO = new UserDAO();
		try {
			User user = userDAO.findUserByKey(request.getParameter("userKey"));
			user.setStatus(0);
			userDAO.saveUser(user);

		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}
		userDAO.closeEntityManager();

		return "1";
	}

	@RequestMapping(value = "/admin/listActivateUserWS", method = RequestMethod.GET)
	@ResponseBody
	public List<User> listActivateUserWS(HttpServletRequest request) {
	
		UserDAO userService = new UserDAO();
		List<User> users = userService.listActivateUsers();
		userService.closeEntityManager();
		return users;
	}

	@RequestMapping(value = "/admin/listDeactivateUserWS", method = RequestMethod.GET)
	@ResponseBody
	public List<User> listDeactivateUserWS(HttpServletRequest request) {
		
		UserDAO service = new UserDAO();
		List<User> users = service.listDeactivateUsers();
		service.closeEntityManager();
		return users;
	}

	@RequestMapping(value = "/admin/updateUserWS", method = RequestMethod.POST)
	@ResponseBody
	public String updateUserWS(HttpServletRequest request) {
		
		try {
			UserDAO userService = new UserDAO();
			User user = userService.findUserByKey(request
					.getParameter("userId"));
			user.setFirstname(request.getParameter("firstname"));
			user.setLastname(request.getParameter("lastname"));
			user.setRole(request.getParameter("role"));
			userService.updateUser(user);
			userService.closeEntityManager();
		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}

		return "1";
	}

	@RequestMapping(value = "/admin/deleteUserWS", method = RequestMethod.DELETE)
	@ResponseBody
	public String removeUser(HttpServletRequest request) {
		
		try {
			UserDAO userService = new UserDAO();
			userService.deleteUser(request.getParameter("userId"));
			userService.closeEntityManager();
		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}

		return "1";

	}

	@RequestMapping(value = "/admin/installPreset", method = RequestMethod.GET)
	@ResponseBody
	public String userTester() {

		try {
			UserDAO userService = new UserDAO();
			User user = new User();
			user.setFirstname("Firstname");
			user.setLastname("Lastname");
			user.setPassword("User");
			user.setUsername("User");
			user.setRole("HospitalStaff");
			user.setStatus(1);
			userService.saveUser(user);
			userService.closeEntityManager();
/*
			UserDAO userService1 = new UserDAO();
			User user1 = new User();
			user1.setFirstname("Nacha");
			user1.setLastname("Chondamrongkul");
			user1.setPassword("admin");
			user1.setUsername("admin");
			user1.setRole("Admin");
			user.setStatus(1);
			userService1.saveUser(user1);
			userService1.closeEntityManager();
*/
		} catch (Exception e) {
			e.printStackTrace();
			return "-1";
		}

		return "1";
	}

	
}
